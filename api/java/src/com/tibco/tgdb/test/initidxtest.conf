#
# Copyright (c) 2016 TIBCO Software Inc.
# All rights reserved.
#
#  File name :initdb.conf
#  Created on: May 27, 2015
#  Created by: suresh
#
#  SVN Id: $Id: initdb.conf 344 2015-05-20 22:02:52Z ssubrama $
#  InitDb Configuration file for TIBCO Graph Database
#
#  Configuration file for creating database
#
#
#

[initdb]

# Database name, path, locale and timezone.
name        = idxtest          // name of the database. Minimum name length of the database is 3 chars.
dbPath      = ../data      // path of the database. Full or relative path.
locale      = en_US.UTF-8
timezone    = UTC
memory      = 1            // Max memory for initdb process

enableHugePages = true


# A segment is a physical file allocated on disk. It is specified in GBs.
# There are 4 types of segments
# Data Segment. They manage data. User specify how many initial segments are needed.
# Index Segment. They contain indices for the data.
# Control Segment. Control Information about the other segments are written in this.
# Transaction Segment. Transaction Write-Ahead logs are maintained as part of the shared memory backed by file.
# Segment consists of multiple page. Each Page is of fixed size.
# The valids Page Sizes enumerated values are their interpretation is as follows. The units are in KB
# 0 => Use System Default Page size.
# 1 => 1KB (1024 Bytes)
# 2 => 2KB (2048 Bytes)
# 4 => 4KB (4096 Bytes)
# 8 => 8KB (8192 Bytes)
# 16 => 16KB (16384 Bytes)
# 32 => 32KB (32768 Bytes)

segSize         = 1             // The unit is GB. Create Segments of 1Gb each. See storage characteristics documents
dataSegCnt      = 2             // Number of segments for data. Default is 2
dataPageSize    = 0             // Data Page size. Default is 512 Bytes
textPageSize    = 4             // Text pages for Blobs and Clobs. Default is 4K page.
indexSegCnt     = 1             // Number of segments for index
idxPageSize     = 8             // Index Page size. Default is 8K

#
# The syscipher is used for creating a System-Wide Self Signed Database certificate.
# The Database certificate provides private/public encryption Keys.
# The cipher name is a TLS 1.2 Cipher Name obtained from IANA Registry.
# See https://www.iana.org/assignments/tls-parameters/tls-parameters.xhtml#tls-parameters-4
# It can be obtained by running
# $> openssl -V ciphers
#

sysciphersuite  = AES256-SHA256 // System wide Cipher to be used for TLS and  encrypted field, and password.
syscipherbits   = 1024          // For DH type the bit strength to use. Minimum is 256.
sysciphercurve  = secp521r1     // EC curve name if it is EC based Cipher Suite
sysexpiryinterval = 1           // The certificate expiry interval to be used for TLS. The unit is in years.
sysuser         = admin         // System Root user
syspasswd       = admin         // System Root passwd is digested using above cipher suite digest function.


#***************************************
#Optional Catalogue Information. This can also be provided on the Admin Command.
#For Ease of use, one can specify here also.
#Define a list attribute definition
#attributename = @type:<typename> [optional @isArray:true|false @default:<value> @encrypted]
[attrtypes]
cityseqno1k = @type:string
city       = @type:string
seqno1k    = @type:int
citycode10 = @type:string
citycode   = @type:string
times10    = @type:int
actor      = @type:string
movie      = @type:string
birthyear  = @type:int
birthcity  = @type:string


[nodetypes]
testnode   = @attrs:cityseqno1k,city,seqno1k,citycode10,citycode,times10,actor,movie,birthyear,birthcity @pkey:cityseqno1k

[edgetypes]

[indices]
cityseqidx = @attrs:city,seqno1k @unique:true @ontype:testnode
ccode10idx = @attrs:citycode10 @unique:false @ontype:testnode
ccodetimes10idx = @attrs:citycode,times10 @unique:false @ontype:testnode

[users]
scott = @passwd:scott @role:user
john  = @passwd:john  @role:operator




